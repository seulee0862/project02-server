plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

jar {
    enabled = false
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    //aop
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    //actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    //prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus:1.11.2'
    //loki
    implementation 'com.github.loki4j:loki-logback-appender:1.4.0'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // openFeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.3'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    //QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    //email
    implementation 'org.springframework.boot:spring-boot-starter-mail'

}

tasks.named('test') {
    useJUnitPlatform()
}
