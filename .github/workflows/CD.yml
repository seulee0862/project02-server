name: Deploy to EC2

on:
  push:
    branches:
      - test
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradlew
#        env:
#          CHEFFI_DIRECTORY: ${{ secrets. }}
        run: |
          ./gradlew clean build

      - name: Create env file
        run: echo "${{ secrets.DOCKER_APP_ENV }}" > ./docker_app_env

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: |
            ./docker_app_env
            ./docker-compose.yml
            ./Dockerfile
            build/libs/*.jar

  deploy:
    name: Deploy with SCP and Docker
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts

      - name: SCP JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "build/libs/*-server-0.0.1-SNAPSHOT.jar,
           ./docker_app_env,
            ./Dockerfile,
             ./docker-compose.yml"
          target: ${{ secrets.PROJECT02_ROOT_DIRECTORY }}
#
#      - name: SSH Execute command on EC2
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USER }}
#          key: ${{ secrets.EC2_KEY }}
#          script: |
#            cd /home/ec2-user/cheffifolder
#            docker-compose down --rmi local
#            docker image prune -f
#            docker-compose up --build -d
